/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package org.pn.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import org.pn.model.Drug;
import org.pn.model.DrugModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the Drug service. Represents a row in the &quot;hos_drug&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link org.pn.model.DrugModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link DrugImpl}.
 * </p>
 *
 * @author thuctap
 * @see DrugImpl
 * @see org.pn.model.Drug
 * @see org.pn.model.DrugModel
 * @generated
 */
public class DrugModelImpl extends BaseModelImpl<Drug> implements DrugModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a drug model instance should use the {@link org.pn.model.Drug} interface instead.
	 */
	public static final String TABLE_NAME = "hos_drug";
	public static final Object[][] TABLE_COLUMNS = {
			{ "id_medicine", Types.BIGINT },
			{ "name_medicine", Types.VARCHAR },
			{ "quantity", Types.INTEGER },
			{ "price", Types.VARCHAR },
			{ "expiration_date", Types.TIMESTAMP }
		};
	public static final String TABLE_SQL_CREATE = "create table hos_drug (id_medicine LONG not null primary key,name_medicine VARCHAR(75) null,quantity INTEGER,price VARCHAR(75) null,expiration_date DATE null)";
	public static final String TABLE_SQL_DROP = "drop table hos_drug";
	public static final String ORDER_BY_JPQL = " ORDER BY drug.id_drug ASC";
	public static final String ORDER_BY_SQL = " ORDER BY hos_drug.id_medicine ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.org.pn.model.Drug"), true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.org.pn.model.Drug"), true);
	public static final boolean COLUMN_BITMASK_ENABLED = false;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.org.pn.model.Drug"));

	public DrugModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _id_drug;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setId_drug(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _id_drug;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return Drug.class;
	}

	@Override
	public String getModelClassName() {
		return Drug.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("id_drug", getId_drug());
		attributes.put("name_medicine", getName_medicine());
		attributes.put("quantity", getQuantity());
		attributes.put("price", getPrice());
		attributes.put("expiration_date", getExpiration_date());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long id_drug = (Long)attributes.get("id_drug");

		if (id_drug != null) {
			setId_drug(id_drug);
		}

		String name_medicine = (String)attributes.get("name_medicine");

		if (name_medicine != null) {
			setName_medicine(name_medicine);
		}

		Integer quantity = (Integer)attributes.get("quantity");

		if (quantity != null) {
			setQuantity(quantity);
		}

		String price = (String)attributes.get("price");

		if (price != null) {
			setPrice(price);
		}

		Date expiration_date = (Date)attributes.get("expiration_date");

		if (expiration_date != null) {
			setExpiration_date(expiration_date);
		}
	}

	@Override
	public long getId_drug() {
		return _id_drug;
	}

	@Override
	public void setId_drug(long id_drug) {
		_id_drug = id_drug;
	}

	@Override
	public String getName_medicine() {
		if (_name_medicine == null) {
			return StringPool.BLANK;
		}
		else {
			return _name_medicine;
		}
	}

	@Override
	public void setName_medicine(String name_medicine) {
		_name_medicine = name_medicine;
	}

	@Override
	public int getQuantity() {
		return _quantity;
	}

	@Override
	public void setQuantity(int quantity) {
		_quantity = quantity;
	}

	@Override
	public String getPrice() {
		if (_price == null) {
			return StringPool.BLANK;
		}
		else {
			return _price;
		}
	}

	@Override
	public void setPrice(String price) {
		_price = price;
	}

	@Override
	public Date getExpiration_date() {
		return _expiration_date;
	}

	@Override
	public void setExpiration_date(Date expiration_date) {
		_expiration_date = expiration_date;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			Drug.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public Drug toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (Drug)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		DrugImpl drugImpl = new DrugImpl();

		drugImpl.setId_drug(getId_drug());
		drugImpl.setName_medicine(getName_medicine());
		drugImpl.setQuantity(getQuantity());
		drugImpl.setPrice(getPrice());
		drugImpl.setExpiration_date(getExpiration_date());

		drugImpl.resetOriginalValues();

		return drugImpl;
	}

	@Override
	public int compareTo(Drug drug) {
		long primaryKey = drug.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof Drug)) {
			return false;
		}

		Drug drug = (Drug)obj;

		long primaryKey = drug.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
	}

	@Override
	public CacheModel<Drug> toCacheModel() {
		DrugCacheModel drugCacheModel = new DrugCacheModel();

		drugCacheModel.id_drug = getId_drug();

		drugCacheModel.name_medicine = getName_medicine();

		String name_medicine = drugCacheModel.name_medicine;

		if ((name_medicine != null) && (name_medicine.length() == 0)) {
			drugCacheModel.name_medicine = null;
		}

		drugCacheModel.quantity = getQuantity();

		drugCacheModel.price = getPrice();

		String price = drugCacheModel.price;

		if ((price != null) && (price.length() == 0)) {
			drugCacheModel.price = null;
		}

		Date expiration_date = getExpiration_date();

		if (expiration_date != null) {
			drugCacheModel.expiration_date = expiration_date.getTime();
		}
		else {
			drugCacheModel.expiration_date = Long.MIN_VALUE;
		}

		return drugCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(11);

		sb.append("{id_drug=");
		sb.append(getId_drug());
		sb.append(", name_medicine=");
		sb.append(getName_medicine());
		sb.append(", quantity=");
		sb.append(getQuantity());
		sb.append(", price=");
		sb.append(getPrice());
		sb.append(", expiration_date=");
		sb.append(getExpiration_date());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(19);

		sb.append("<model><model-name>");
		sb.append("org.pn.model.Drug");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>id_drug</column-name><column-value><![CDATA[");
		sb.append(getId_drug());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>name_medicine</column-name><column-value><![CDATA[");
		sb.append(getName_medicine());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>quantity</column-name><column-value><![CDATA[");
		sb.append(getQuantity());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>price</column-name><column-value><![CDATA[");
		sb.append(getPrice());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>expiration_date</column-name><column-value><![CDATA[");
		sb.append(getExpiration_date());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = Drug.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] { Drug.class };
	private long _id_drug;
	private String _name_medicine;
	private int _quantity;
	private String _price;
	private Date _expiration_date;
	private Drug _escapedModel;
}