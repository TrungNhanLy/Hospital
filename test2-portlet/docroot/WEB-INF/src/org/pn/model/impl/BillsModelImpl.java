/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package org.pn.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import org.pn.model.Bills;
import org.pn.model.BillsModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the Bills service. Represents a row in the &quot;hos_bill&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link org.pn.model.BillsModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link BillsImpl}.
 * </p>
 *
 * @author thuctap
 * @see BillsImpl
 * @see org.pn.model.Bills
 * @see org.pn.model.BillsModel
 * @generated
 */
public class BillsModelImpl extends BaseModelImpl<Bills> implements BillsModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a bills model instance should use the {@link org.pn.model.Bills} interface instead.
	 */
	public static final String TABLE_NAME = "hos_bill";
	public static final Object[][] TABLE_COLUMNS = {
			{ "bill_no", Types.BIGINT },
			{ "patient_name", Types.VARCHAR },
			{ "doctor_name", Types.VARCHAR },
			{ "bill_date", Types.TIMESTAMP },
			{ "amount", Types.INTEGER },
			{ "id_patient", Types.BIGINT }
		};
	public static final String TABLE_SQL_CREATE = "create table hos_bill (bill_no LONG not null primary key,patient_name VARCHAR(75) null,doctor_name VARCHAR(75) null,bill_date DATE null,amount INTEGER,id_patient LONG)";
	public static final String TABLE_SQL_DROP = "drop table hos_bill";
	public static final String ORDER_BY_JPQL = " ORDER BY bills.bill_no ASC";
	public static final String ORDER_BY_SQL = " ORDER BY hos_bill.bill_no ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.org.pn.model.Bills"), true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.org.pn.model.Bills"), true);
	public static final boolean COLUMN_BITMASK_ENABLED = false;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.org.pn.model.Bills"));

	public BillsModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _bill_no;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setBill_no(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _bill_no;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return Bills.class;
	}

	@Override
	public String getModelClassName() {
		return Bills.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("bill_no", getBill_no());
		attributes.put("patient_name", getPatient_name());
		attributes.put("doctor_name", getDoctor_name());
		attributes.put("bill_date", getBill_date());
		attributes.put("amount", getAmount());
		attributes.put("id_patient", getId_patient());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long bill_no = (Long)attributes.get("bill_no");

		if (bill_no != null) {
			setBill_no(bill_no);
		}

		String patient_name = (String)attributes.get("patient_name");

		if (patient_name != null) {
			setPatient_name(patient_name);
		}

		String doctor_name = (String)attributes.get("doctor_name");

		if (doctor_name != null) {
			setDoctor_name(doctor_name);
		}

		Date bill_date = (Date)attributes.get("bill_date");

		if (bill_date != null) {
			setBill_date(bill_date);
		}

		Integer amount = (Integer)attributes.get("amount");

		if (amount != null) {
			setAmount(amount);
		}

		Long id_patient = (Long)attributes.get("id_patient");

		if (id_patient != null) {
			setId_patient(id_patient);
		}
	}

	@Override
	public long getBill_no() {
		return _bill_no;
	}

	@Override
	public void setBill_no(long bill_no) {
		_bill_no = bill_no;
	}

	@Override
	public String getPatient_name() {
		if (_patient_name == null) {
			return StringPool.BLANK;
		}
		else {
			return _patient_name;
		}
	}

	@Override
	public void setPatient_name(String patient_name) {
		_patient_name = patient_name;
	}

	@Override
	public String getDoctor_name() {
		if (_doctor_name == null) {
			return StringPool.BLANK;
		}
		else {
			return _doctor_name;
		}
	}

	@Override
	public void setDoctor_name(String doctor_name) {
		_doctor_name = doctor_name;
	}

	@Override
	public Date getBill_date() {
		return _bill_date;
	}

	@Override
	public void setBill_date(Date bill_date) {
		_bill_date = bill_date;
	}

	@Override
	public int getAmount() {
		return _amount;
	}

	@Override
	public void setAmount(int amount) {
		_amount = amount;
	}

	@Override
	public long getId_patient() {
		return _id_patient;
	}

	@Override
	public void setId_patient(long id_patient) {
		_id_patient = id_patient;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			Bills.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public Bills toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (Bills)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		BillsImpl billsImpl = new BillsImpl();

		billsImpl.setBill_no(getBill_no());
		billsImpl.setPatient_name(getPatient_name());
		billsImpl.setDoctor_name(getDoctor_name());
		billsImpl.setBill_date(getBill_date());
		billsImpl.setAmount(getAmount());
		billsImpl.setId_patient(getId_patient());

		billsImpl.resetOriginalValues();

		return billsImpl;
	}

	@Override
	public int compareTo(Bills bills) {
		long primaryKey = bills.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof Bills)) {
			return false;
		}

		Bills bills = (Bills)obj;

		long primaryKey = bills.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
	}

	@Override
	public CacheModel<Bills> toCacheModel() {
		BillsCacheModel billsCacheModel = new BillsCacheModel();

		billsCacheModel.bill_no = getBill_no();

		billsCacheModel.patient_name = getPatient_name();

		String patient_name = billsCacheModel.patient_name;

		if ((patient_name != null) && (patient_name.length() == 0)) {
			billsCacheModel.patient_name = null;
		}

		billsCacheModel.doctor_name = getDoctor_name();

		String doctor_name = billsCacheModel.doctor_name;

		if ((doctor_name != null) && (doctor_name.length() == 0)) {
			billsCacheModel.doctor_name = null;
		}

		Date bill_date = getBill_date();

		if (bill_date != null) {
			billsCacheModel.bill_date = bill_date.getTime();
		}
		else {
			billsCacheModel.bill_date = Long.MIN_VALUE;
		}

		billsCacheModel.amount = getAmount();

		billsCacheModel.id_patient = getId_patient();

		return billsCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(13);

		sb.append("{bill_no=");
		sb.append(getBill_no());
		sb.append(", patient_name=");
		sb.append(getPatient_name());
		sb.append(", doctor_name=");
		sb.append(getDoctor_name());
		sb.append(", bill_date=");
		sb.append(getBill_date());
		sb.append(", amount=");
		sb.append(getAmount());
		sb.append(", id_patient=");
		sb.append(getId_patient());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(22);

		sb.append("<model><model-name>");
		sb.append("org.pn.model.Bills");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>bill_no</column-name><column-value><![CDATA[");
		sb.append(getBill_no());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>patient_name</column-name><column-value><![CDATA[");
		sb.append(getPatient_name());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>doctor_name</column-name><column-value><![CDATA[");
		sb.append(getDoctor_name());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>bill_date</column-name><column-value><![CDATA[");
		sb.append(getBill_date());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>amount</column-name><column-value><![CDATA[");
		sb.append(getAmount());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>id_patient</column-name><column-value><![CDATA[");
		sb.append(getId_patient());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = Bills.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] { Bills.class };
	private long _bill_no;
	private String _patient_name;
	private String _doctor_name;
	private Date _bill_date;
	private int _amount;
	private long _id_patient;
	private Bills _escapedModel;
}